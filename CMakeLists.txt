cmake_minimum_required(VERSION 3.1)
project(Cobalt C CXX)

set(SOIL_INCLUDE_DIRS "/usr/include" CACHE PATH "SOIL Include Path")
set(SOIL_LIB_DIR "/usr/lib" CACHE PATH "SOIL Lib Path")
link_directories(${SOIL_LIB_DIR})

find_package(PkgConfig REQUIRED)
pkg_search_module(GLFW REQUIRED glfw3)
find_package(GLUT REQUIRED)
find_package(OpenGL REQUIRED)
find_package(GLM REQUIRED)
find_package(Assimp REQUIRED)
find_package(GLEW REQUIRED)

add_library(Cobalt shader_loader.cpp camera.cpp camera_manager.cpp gl_exception.cpp material.cpp material_manager.cpp mesh.cpp node.cpp
	    renderer.cpp scene.cpp shader.cpp shader_manager.cpp shader_loader.cpp texture.cpp texture_manager.cpp)
target_include_directories(Cobalt PUBLIC ${SOIL_INCLUDE_DIRS})
target_include_directories(Cobalt PRIVATE ${GLFW_INCLUDE_DIRS})
target_link_libraries(Cobalt ${GLFW_LIBRARIES})
target_include_directories(Cobalt PRIVATE ${GLUT_INCLUDE_DIRS})
target_link_libraries(Cobalt ${GLUT_LIBRARIES})
target_include_directories(Cobalt PRIVATE ${OPENGL_INCLUDE_DIR})
target_link_libraries(Cobalt ${OPENGL_LIBRARIES})
target_include_directories(Cobalt PRIVATE ${GLM_INCLUDE_DIR})
target_link_libraries(Cobalt "-lSOIL")
target_include_directories(Cobalt PRIVATE ${ASSIMP_INCLUDE_DIRS})
target_link_libraries(Cobalt ${ASSIMP_LIBRARIES})
target_include_directories(Cobalt PRIVATE ${GLEW_INCLUDE_DIRS})
target_link_libraries(Cobalt ${GLEW_LIBRARIES})

add_executable(CobaltDemo main.cpp)
target_link_libraries(CobaltDemo Cobalt)
target_link_libraries(CobaltDemo "-lSOIL")
